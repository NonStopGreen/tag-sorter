(function(a,b){"function"==typeof define&&define.amd?define([],b):"object"==typeof module&&module.exports?module.exports=b():a.returnExports=b()})("undefined"==typeof self?this:self,function(){'use strict';return class a{constructor({documents:a=[]}){this.isArrayFilledWithObjects(a),this._documents=a,this.documents=a,this.limitCount=1/0}isArrayFilledWithStrings(a){if(!Array.isArray(a)||0===a.length||a.some(a=>"string"!=typeof a))throw new TypeError("Array is not filled with strings")}isArrayFilledWithObjects(a){if(!Array.isArray(a)||0==a.length||a.some(a=>"object"!=typeof a))throw new TypeError("Array is not filled with objects")}find(a={}){var b,{watchedTags:c,ignoredTags:d}=a;return this.watchedTags=c,this.ignoredTags=d,c&&this.isArrayFilledWithStrings(c),d&&this.isArrayFilledWithStrings(d),this.documents=this._documents.filter(a=>{if(d)for(b=0;b<d.length;b++)if(a.tags.includes(d[b]))return;if(c)for(b=0;b<c.length;b++)if(a.tags.includes(c[b]))return a}),c||d||(this.documents=this._documents),this}limit(a=1/0){if(isNaN(a)||0>=a)throw new TypeError("Parameter number in limit() is not a positive number larger than 0");return this.limitCount=a,this}sort(a=-1){var b=this,a=a;return this.documents=this.documents.sort((c,d)=>{var e,f=0,g=0;for(e=0;e<b.watchedTags.length;e++)c.tags.includes(b.watchedTags[e])&&(f+=1),d.tags.includes(b.watchedTags[e])&&(g+=1);if("descending"===a||-1===a){if(f<g)return 1;if(f>g)return-1}else if("ascending"===a||1===a){if(f>g)return 1;if(f<g)return-1}else throw new TypeError("Parameter for sort() should be: \"descending\" or \"ascending\" or -1 or 1");return 0}),this}exec(a){var b=this.documents.flatMap(a=>a.tags),c={};return c.documents=this.documents.slice(0,this.limitCount),c.tagsCounted=b.reduce((a,b)=>(a[b]=(a[b]||0)+1,a),{}),c.uniqueTags=[...new Set(b)],this.watchedTags=[],this.ignoredTags=[],this.limitCount=1/0,this.documents=this._documents,"function"==typeof a?a(c):c}}});

!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.returnExports=e()}("undefined"!=typeof self?self:this,function(){"use strict";return class{constructor({documents:t=[],tags:e=[],ignoredTags:r=[]}){if(!Array.isArray(t)||0==t.length||!t.every(t=>"object"==typeof t))throw new TypeError("Parameter documents is not an array filled with objects");if(!Array.isArray(e)||0==e.length||!e.every(t=>"string"==typeof t))throw new TypeError("Parameter tags is not an array filled with strings");this._documents=t,this.documents=t,this.tags=e,this.ignoredTags=r}find(){var t;return this.documents=this._documents.filter(e=>{for(t=0;t<this.ignoredTags.length;t++)if(e.tags.includes(this.ignoredTags[t]))return;for(t=0;t<this.tags.length;t++)if(e.tags.includes(this.tags[t]))return e}),this}limit(t=1/0){if(isNaN(t)||t<0)throw new TypeError("Parameter number in limit() is not a positive number");if(!(this.documents.length>=t))throw new RangeError("Parameter number in limit() is bigger than documents length");return this.documents=this.documents.slice(0,t),this}sort(t=-1){var e=this;return t=t,this.documents=this.documents.sort((r,s)=>{var n,i=0,o=0;for(n=0;n<e.tags.length;n++)r.tags.includes(e.tags[n])&&(i+=1),s.tags.includes(e.tags[n])&&(o+=1);if("descending"===t||-1===t){if(i<o)return 1;if(i>o)return-1}else{if("ascending"!==t&&1!==t)throw new TypeError('Parameter for sort() should be: "descending" or "ascending" or -1 or 1');if(i>o)return 1;if(i<o)return-1}return 0}),this}exec(t){var e=this.documents.flatMap(t=>t.tags),r={};return r.documents=this.documents,r.tagsCounted=e.reduce((t,e)=>(t[e]=(t[e]||0)+1,t),{}),r.uniqueTags=[...new Set(e)],"function"==typeof r?t([],r):r}}});
